if(CMAKE_BUILD_TYPE MATCHES "Debug")
    message(STATUS "Enabling Debug Mode")
    add_definitions(-DDBG=1)
    set(CRY_BUFFER_MULT 16)
else()
    set(CRY_BUFFER_MULT 1024)
endif()

option( BUILD_ENCRYPT "build encryptor" OFF )
option( BUILD_DECRYPT "build decryptor" OFF )
option( BUILD_ENCDEC "build encryptor and decryptor" OFF )
option ( BUILD_TESTS "Build Tests" OFF )
option ( STDOUT "Enable std::cout" ON )
option (BOOST_STATIC "Link statically to Boost" OFF)
option( BUILD_STATIC_LIB "Build Static library" ON )
option( BUILD_SHARED_LIB "Build Shared library" OFF)

option(GCOV "GCOV Coverage" OFF)
option(GCOVR "Use gcovr" OFF)

option(GCC_REPORT "GCC Report" OFF)

if(STDOUT)
    add_definitions("-DCRY_STDOUT=1")
endif(STDOUT)

if(GCOV)
 SET (BUILD_TESTS ON)
 endif(GCOV)

 if (GCOVR)
    set(CMAKE_CXX_FLAGS " ${CMAKE_CXX_FLAGS} --coverage")
 endif(GCOVR)

 if(GCC_REPORT)
    #set(CMAKE_CXX_FLAGS " ${CMAKE_CXX_FLAGS} -fdiagnostics-show-option")
 endif(GCC_REPORT)

if(NOT CRY_DEFAULT_PASSWORD)
    message(STATUS "Using generic default password")
    SET(CRY_DEFAULT_PASSWORD "DEFAULTpassword123CHANGEME")
endif()

if(NOT CRY_DEFAULT_IV)
    message(STATUS "Using default IV")
    SET(CRY_DEFAULT_IV "cRy-b@by-369")
endif()

SET(GPG_ALGO  GCRY_CIPHER_AES256)
SET(CRY_EXT  \".cry\")

if(BUILD_ENCDEC OR GCOV)
    SET (BUILD_ENCRYPT OFF)
    SET (BUILD_DECRYPT OFF)
    SET (APP ${APP})
    add_definitions(-DCRY_ENCRYPT=1 -DCRY_DECRYPT=1)
elseif(BUILD_ENCRYPT OR GCOV)
    SET ( APP ${APP}e)
    add_definitions(-DCRY_ENCRYPT=1 -DCRY_DECRYPT=0)
elseif(BUILD_DECRYPT OR GCOV)
    SET ( APP ${APP}d)
    add_definitions(-DCRY_ENCRYPT=0 -DCRY_DECRYPT=1)
endif(BUILD_ENCDEC OR GCOV)
